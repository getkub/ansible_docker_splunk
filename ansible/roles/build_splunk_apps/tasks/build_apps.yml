---

# Create hostnames based directories with configurations
# Directly update $SPLUNK_HOME/etc/system/local/ for certain configurations
- name:  Create host-specific conf files
  template:
    src: "{{item[1]}}"
    dest: "{{dest_base}}/{{project}}/{{bareApps}}/{{inputTag}}-specific/{{hostname}}/etc/system/local/{{ item[1] | basename | regex_replace('.j2','') }}"
  with_nested:
    - "{{serverList_csv_dict.dict|dict2items}}"
    - "{{ lookup('fileglob', '../templates/system_local/*.j2').split(',') }}"
  vars:
    - hostname: "{{item[0].value.hostname}}"
    - hostGroup: "{{item[0].value.hostGroup}}"
    - site_id: "{{item[0].value.site_id}}"

# Complex one. Filetree and loop
- name: Create directory structure
  file:
    path: "{{dest_base}}/{{project}}/{{bareApps}}/{{inputTag}}-specific/temp/{{item.path}}"
    state: directory
  with_items:
    - "{{ lookup('filetree', '../templates/common')}}"
    - "{{ lookup('filetree', '../templates/' + inputTag )}}"
  when:
    - item.state == 'directory'

- name: Copy templates to temp directory
  template:
    src:  "{{item.src}}/"
    dest: "{{dest_base}}/{{project}}/{{bareApps}}/{{inputTag}}-specific/temp/{{item.path| dirname}}/{{item.path| basename | regex_replace('.j2','') }}"
  with_items:
    - "{{ lookup('filetree', '../templates/common')}}"
    - "{{ lookup('filetree', '../templates/' + inputTag )}}"
  when:
    - item.state == 'file'


