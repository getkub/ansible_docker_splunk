---
# Playbook to create apps using templates

- name: Cleaning previous temporary directory
  file:
    path: "{{dest_base}}/{{project}}/{{bareApps}}"
    state: "{{item}}"
  with_items:
    - absent

# # This needs to be modified with correct permission set if you want to use in serious environment
- name: Creating Temporary directory
  file:
    path: "{{dest_base}}/{{project}}/{{bareApps}}/{{inputTag}}-specific/common"
    mode: "u=rwx,g=rwx,o=rwx"
    state: directory
    recurse: yes

# Copy files from template to bareApps in Temporary location
- name: Build necessary non-template files & directories
  synchronize:
    src:  "../files/{{env}}/"
    dest: "{{dest_base}}/{{project}}/{{bareApps}}/{{inputTag}}-specific/common"
    delete: yes

# Create host-specific directories too
- name: Creates Host-Specific directory
  file:
    state: directory
    path:  "{{dest_base}}/{{project}}/{{bareApps}}/{{inputTag}}-specific/{{hostname}}/{{ item[1] }}"
  with_nested:
    - "{{serverList_csv_dict.dict|dict2items}}"
    - ['etc/system/local', 'etc/apps']
  vars:
    - hostname: "{{item[0].value.hostname}}"
    - hostGroup: "{{item[0].value.hostGroup}}"
    - portMapping: "{{item[0].value.portMapping}}"
    - site_id: "{{item[0].value.site_id}}"

# Create hostnames based directories with configurations
# Directly update $SPLUNK_HOME/etc/system/local/ for certain configurations
- name:  Create host-specific conf files
  template:
    src: "{{item[1]}}"
    dest: "{{dest_base}}/{{project}}/{{bareApps}}/{{inputTag}}-specific/{{hostname}}/etc/system/local/{{ item[1] | basename | regex_replace('.j2','') }}"
  with_nested:
    - "{{serverList_csv_dict.dict|dict2items}}"
    - "{{ lookup('fileglob', '../templates/system_local/*.j2').split(',') }}"
  vars:
    - hostname: "{{item[0].value.hostname}}"
    - hostGroup: "{{item[0].value.hostGroup}}"
    - portMapping: "{{item[0].value.portMapping}}"
    - site_id: "{{item[0].value.site_id}}"

# Create Splunk apps directory from template
# - name: Ensure App dir Exists
#   file:
#     path: "{{dest_base}}/{{project}}/{{bareApps}}/{{item | basename | regex_replace('^(?P<appName>.+)__.*$', '\\g<appName>')}}/local"
#     state: directory
#   with_fileglob:
#     - "../templates/common/*.j2"
#     - "../templates/{{inputTag}}/*.j2"

# Create Splunk apps from template
# - name: Copy templates to common directory
#   synchronize:
#     src:  "{{item}}/"
#     dest: "{{dest_base}}/{{project}}/{{bareApps}}/{{inputTag}}-specific/common"
#     delete: no
#   loop:
#     - "../templates/common"

# - name: Print
#   debug:
#     msg:
#       - "{{item}}"
#   with_filetree:
#     - "../templates/common/"

# - name: Template cfg
#   include_tasks: inner_template_tasks.yml
#   with_filetree: 
#     - "../templates/common/"



# https://stackoverflow.com/questions/62805492/nest-with-filetree-and-loop
# - name: PRINT
#   debug:
#     msg:  
#       - src:  "{{item.src}}/"
#       - dest: "{{dest_base}}/{{project}}/{{bareApps}}/{{inputTag}}-specific/common/{{item.path}}"
#   with_items:
#     - "{{ lookup('filetree', '../templates/common')}}"
#   when:
#     - item.state == 'file'

- name: Create directory structure
  file:
    path: "{{dest_base}}/{{project}}/{{bareApps}}/{{inputTag}}-specific/common/{{item.path}}"
    state: directory
  with_items:
    - "{{ lookup('filetree', '../templates/common')}}"
  when:
    - item.state == 'directory'

- name: Copy templates to common directory
  template:
    src:  "{{item.src}}/"
    dest: "{{dest_base}}/{{project}}/{{bareApps}}/{{inputTag}}-specific/common/{{item.path| dirname}}/{{item.path| basename | regex_replace('.j2','') }}"
  with_items:
    - "{{ lookup('filetree', '../templates/common')}}"
  when:
    - item.state == 'file'

# - name: Replace all jinja with proper values
#   template:
#     src:  "{{item}}/*/*/*.j2"
#     dest: "{{dest_base}}/{{project}}/{{bareApps}}/{{inputTag}}-specific/common"
#     delete: no
#   loop:
#     - "../templates/common"