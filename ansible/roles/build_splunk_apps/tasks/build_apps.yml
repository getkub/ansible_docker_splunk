---
# Playbook to create apps using templates

- name: Cleaning previous temporary directory
  file:
    path: "{{dest_base}}/{{project}}/{{bareApps}}"
    state: "{{item}}"
  with_items:
    - absent

# This needs to be modified with correct permission set if you want to use in serious environment
- name: Creating Temporary directory
  file:
    path: "{{dest_base}}/{{project}}/{{bareApps}}"
    mode: "u=rwx,g=rwx,o=rwx"
    state: directory
    recurse: yes

# Copy files from template to bareApps in Temporary location
- name: Build necessary non-template files & directories
  synchronize:
    src:  "../files/{{env}}/"
    dest: "{{dest_base}}/{{project}}/{{bareApps}}/"
    delete: yes

# Create host-specific directories too
- name: Creates Host-Specific directory
  file:
    state: directory
    path:  "{{dest_base}}/{{project}}/{{bareApps}}/{{inputTag}}-specific/{{item.hostname}}/etc/system/local"
  with_items:
     - "{{serverList_csv_dict}}"

# Create hostnames based directories with configurations
# Directly update $SPLUNK_HOME/etc/system/local/ for certain configurations
- name:  Create host-specific conf files
  template:
        src="{{item[1]}}"
        dest="{{dest_base}}/{{project}}/{{bareApps}}/{{inputTag}}-specific/{{item[0].hostname}}/etc/system/local/{{ item[1] | basename | regex_replace('\.j2','') }}"
  with_nested:
     - "{{serverList_csv_dict}}"
     - "{{ lookup('fileglob', '../templates/system_local/*.j2').split(',') }}"

# Create Splunk apps directory from template
- name: Ensure App dir Exists
  file:
    path: "{{dest_base}}/{{project}}/{{bareApps}}/{{item | basename | regex_replace('^(?P<appName>.+)__.*$', '\\g<appName>')}}/local"
    state: directory
  with_fileglob:
    - "../templates/common/*.j2"
    - "../templates/{{inputTag}}/*.j2"

# Create Splunk apps from template
- name: Build apps from ready-made templates
  template:
    src={{item}}
    dest={{dest_base}}/{{project}}/{{bareApps}}/{{item | basename | regex_replace('^(?P<appName>.+)__.*$', '\\g<appName>')}}/local/{{item | basename | regex_replace('.*__(?P<confName>.+)\.j2', '\\g<confName>')}}
  with_fileglob:
    - "../templates/common/*.j2"
    - "../templates/{{inputTag}}/*.j2"
